<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="jar" name="kafka">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="kafka.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/kafka_2.10-0.8.2.1.jar"/>
        <pathelement location="lib/jopt-simple-3.2.jar"/>
        <pathelement location="lib/kafka-clients-0.8.2.1.jar"/>
        <pathelement location="lib/log4j-1.2.16.jar"/>
        <pathelement location="lib/lz4-1.2.0.jar"/>
        <pathelement location="lib/metrics-core-2.2.0.jar"/>
        <pathelement location="lib/scala-library-2.10.4.jar"/>
        <pathelement location="lib/slf4j-api-1.7.6.jar"/>
        <pathelement location="lib/slf4j-log4j12-1.6.1.jar"/>
        <pathelement location="lib/snappy-java-1.1.1.6.jar"/>
        <pathelement location="lib/zkclient-0.3.jar"/>
        <pathelement location="lib/zookeeper-3.4.6.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="kafka.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
              	<target name="jar" depends="build">
              				<pathconvert property="libs.project" pathsep=" ">
              					<mapper>
              						<chainedmapper>
              							<!-- remove absolute path -->
              							<flattenmapper />
              							<!-- add lib/ prefix -->
              							<globmapper from="*" to="*" />
              						</chainedmapper>
              					</mapper>
              					<path>
              						<!-- lib.home contains all jar files, in several subdirectories -->
              						<fileset dir="lib">
              							<include name="**/*.jar" />
              						</fileset>
              					</path>
              				</pathconvert>
              				<delete file="E:/kafkatest.jar" />
              				<jar jarfile="E:/kafkatest.jar">
              					<!-- define MANIFEST.MF -->
              					<manifest>
              						<attribute name="Main-Class" value="cn.clickwise.bigdata.kafka.producer.ProduceData" />
              						<!--<attribute name="Main-Class" value="cn.clickwise.bigdata.kafka.redissave.RedisSave" />-->
              						<!-- finally, use the magically generated libs path -->
              						<attribute name="Class-Path" value="${libs.project}" />
              					</manifest>
              					<zipgroupfileset dir="lib" includes="*.jar" />
              					<fileset dir="bin" includes="**/*.*" />
              				</jar>
              			</target>
</project>
